# PHP
# Test and package your PHP project.
# Add steps that run tests, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/php
trigger:
  branches:
    include:
      - developer
      - main

pool:
  vmImage: 'ubuntu-20.04'

variables:
  PHP_VERSION: 7.4
  NODE_VERSION: 14
  MYSQL_VERSION: 5.7
  DB_NAME: 'AppPPBD'
  DB_USER: 'laravel_user'
  DB_PASSWORD: 'secret_password'
  DB_HOST: '127.0.0.1'
  DB_PORT: 3306

services:
  mysql:
    image: mysql:5.7
    env:
      MYSQL_DATABASE: $(DB_NAME)
      MYSQL_USER: $(DB_USER)
      MYSQL_PASSWORD: $(DB_PASSWORD)
      MYSQL_ROOT_PASSWORD: 'root_password'
    ports:
      - 3306:3306

steps:
  - script: |
      sudo apt-get update
      sudo apt-get install -y software-properties-common
      sudo add-apt-repository -y ppa:ondrej/php
      sudo apt-get update
      sudo apt-get remove -y php*
      sudo apt-get install -y php7.4 php7.4-cli php7.4-mbstring php7.4-xml php7.4-bcmath php7.4-curl php7.4-zip unzip
      sudo update-alternatives --set php /usr/bin/php7.4
      php -v
    displayName: 'üîß Instalar y forzar PHP 7.4'

  - script: |
      curl -sS https://getcomposer.org/installer | php
      sudo mv composer.phar /usr/local/bin/composer
      composer --version
    displayName: '‚öôÔ∏è Instalar Composer'

  - script: |
      composer install --ignore-platform-reqs --no-interaction --prefer-dist
    displayName: 'üì¶ Instalar dependencias de Laravel'

  - script: |
      cp .env.example .env
      sed -i 's/DB_DATABASE=laravel/DB_DATABASE=$(DB_NAME)/' .env
      sed -i 's/DB_USERNAME=root/DB_USERNAME=$(DB_USER)/' .env
      sed -i 's/DB_PASSWORD=/DB_PASSWORD=$(DB_PASSWORD)/' .env
      sed -i 's/DB_HOST=127.0.0.1/DB_HOST=$(DB_HOST)/' .env
      sed -i 's/DB_PORT=3306/DB_PORT=$(DB_PORT)/' .env
      php artisan key:generate
    displayName: 'üîë Configurar entorno Laravel'

  - script: |
      sleep 20
      mysql -h $(DB_HOST) -P $(DB_PORT) -u$(DB_USER) -p$(DB_PASSWORD) -e "SHOW DATABASES;"
    displayName: '‚úÖ Verificar conexi√≥n con MySQL'

  - script: |
      php artisan migrate --force
    displayName: 'üóÑÔ∏è Ejecutar migraciones'

  - script: |
      php artisan serve --host=0.0.0.0 --port=8000 &
    displayName: 'üöÄ Iniciar Servidor Laravel'

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Build.SourcesDirectory)'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/deploy.zip'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.ArtifactStagingDirectory)/deploy.zip'
      artifactName: 'drop'
